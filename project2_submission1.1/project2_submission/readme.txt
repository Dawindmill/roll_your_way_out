

The Developers of 'Roll Your Way Out':

Ruijing Zhang(646179)
Bingfeng Liu(639187)
Weiwei Cai(634082)


1. What the application does

This Game is developed for the subject, Graphics and Interaction (COMP30019) in the University of Melbourne. This Game is developed based on the project 2 framework provided from the subject, Graphics and Interaction. The Name of this game is called 'Roll Your Way Out'ù. The game is formed by a spherical ball and 3d Maze map. 

2. How to use it

Control the ball by tilting the table/mobile in the direction you want the ball to move to. The movement of the ball follows the natural physics. Try to find the exit of the maze and Roll your way out.

On the main page:

Tap/Click the 'start game' button to start playing game. 
Tap/Click the 'about' button to view the authorship statement.
Tap/Click the 'help' button to see how to play the game.
Tap/Click the 'option' button to change the game settings.
Tap/Click the 'exit' button to exit the game.

For the UI after started the game:

Tap/Click the 'restart' will reset the ball to the initial position.
Tap/Click the 'Path hint' will show the path to the exit from the current position.
Tap/Click the 'seed' can change the seed number and tap/click restart will regenerate a new maze.
Tap/Click the 'exit' will terminate the game.
Tap/Click the 'pause/resume' will pause or resume the game.
Drag the 'maze size' slider will change the size of the maze.
Drag the "gravity factor" will change the gravity of the game world.

On the option page:

Tap/Click the 'seed' can change the seed number and tap/click restart will regenerate a new maze.
Tap/Click the 'back' will go back to the menu page.
Drag the 'maze size' slider will change the size of the maze.
Drag the "gravity factor" will change the gravity of the game world.

On the maze completed page (when you reach the exit of the game):

Tap/Click the 'new game' will assigned a random seed to the maze , increase the maze size and 'restart' the maze.
Tap/Click the 'close' can close the 'maze completed page'.
Tap/Click the 'exit' can exit the game.


3. How you modelled objects and entities.
The sphere was made with Blender and imported to the program.
Any other objects were rendered by constructing vertices.
Maze are generated by backwards-Recursive algorithm with A star. 
There is no physics engine between entities and objects, instead, we costomized our own basic physics engine to control the movement of the ball and detect collisions. 
Since physics engine requires us to construct maze in a rigid body, which will not be able to fit into randomized maze map in our scope.

4. How you handled graphics and camera motion.
The cartoon shadding is used for the maze in this game, and the ball used the customized phong shadding. 

The camera always keeps a certain amount of distance with a certain angle to the sphere. Users are able to see a reasonable area around the ball, which gives them a better view and help them make better decision of the ball's movement. 

5. Credits:

We did not use any other API/code apart from the codes provided from this subject.
